name: DH-Blog Build and Release (Single Job)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  BINARY_NAME: dhblog
  BACKEND_DIR: blog-backend
  FRONTEND_DIR: blog-front

jobs:
  build-and-upload-separately:
    name: 🛠️ Build for ${{ matrix.os }}/${{ matrix.arch }}
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          - os: darwin
            arch: arm64
            ext: "-darwin-arm64"
          - os: windows
            arch: amd64
            ext: "-windows-amd64.exe"
          - os: linux
            arch: amd64
            ext: "-linux-amd64"

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
          cache-dependency-path: '${{ env.FRONTEND_DIR }}/pnpm-lock.yaml'

      - name: 📦 Build Frontend
        working-directory: ${{ env.FRONTEND_DIR }}
        run: |
          pnpm install --frozen-lockfile
          pnpm build

      - name: ⚙️ Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache-dependency-path: '${{ env.BACKEND_DIR }}/go.sum'

      - name: 🏗️ Build Go Binary
        run: |
          # 准备嵌入目录
          EMBED_DIR="${{ env.BACKEND_DIR }}/internal/frontend/dist"
          mkdir -p "$EMBED_DIR"
          cp -r "${{ env.FRONTEND_DIR }}/dist/"* "$EMBED_DIR/"
          
          # 创建输出目录
          mkdir -p build

          # 构建Go二进制文件，添加CGO_ENABLED=1以支持sqlite3
          (cd ${{ env.BACKEND_DIR }} && CGO_ENABLED=1 GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -ldflags="-s -w" -o ../build/${{ env.BINARY_NAME }}${{ matrix.ext }} ./cmd/blog-backend)

      - name: ⬆️ Upload Binary Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BINARY_NAME }}${{ matrix.ext }}
          path: build/${{ env.BINARY_NAME }}${{ matrix.ext }}
